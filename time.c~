//
// time library
//

#include "time.h"

typedef struct tag_TIMER
{
	unsigned int Timer_Status;
	unsigned int Timer_LB;
	unsigned int Timer_HB;
	unsigned int Timer_Cmp0;
	unsigned int Timer_Cmp1;
	unsigned int Timer_Cmp2;
	unsigned int Timer_Cmp3;
} Timer_Reg;

unsigned int
gettime( )
{
	unsigned int Time_low;
	Time_low = GET32(TIMER_BASE + 0x04);
	return Timer_low;
}

unsigned int
timediff( unsigned int now, unsigned int then )
{
	if(now >= then)
		return (now-then);
	if(now < then)
		return (now + 0xffffffff - then);
}

void
wait( unsigned int time )
{
	unsigned int now;
	unsigned int then;
	then = gettime();
	now = gettime();
	while(timediff(now, then)<=time)
	{
		now = gettime();
		if(timediff(now,then)==time) break;
	}
}

